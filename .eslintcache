[{"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\mybase.js":"4","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Navigation.js":"5","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\AuthForm.js":"6","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\Home.js":"7","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\Profile.js":"8","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\AuthWithSocial.js":"9","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\DwitteFactory.js":"10","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Dwitte.js":"11","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Loading.js":"12"},{"size":206,"mtime":1612177504058,"results":"13","hashOfConfig":"14"},{"size":1442,"mtime":1612763381165,"results":"15","hashOfConfig":"14"},{"size":780,"mtime":1612584612625,"results":"16","hashOfConfig":"14"},{"size":657,"mtime":1609834381061,"results":"17","hashOfConfig":"14"},{"size":837,"mtime":1611731524292,"results":"18","hashOfConfig":"14"},{"size":2942,"mtime":1611902536774,"results":"19","hashOfConfig":"14"},{"size":888,"mtime":1612589074206,"results":"20","hashOfConfig":"14"},{"size":2041,"mtime":1612433044257,"results":"21","hashOfConfig":"14"},{"size":1027,"mtime":1612084118329,"results":"22","hashOfConfig":"14"},{"size":2667,"mtime":1612111628689,"results":"23","hashOfConfig":"14"},{"size":2442,"mtime":1612244901095,"results":"24","hashOfConfig":"14"},{"size":191,"mtime":1612763332726,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xe7dar",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\index.js",[],["56","57"],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\mybase.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Navigation.js",["58"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  });\n  return (\n    <nav>\n      <div className=\"nav-container\">\n        <h5 className=\"home-link\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n        </h5>\n        <h5 className=\"profile-link\">\n          <HiOutlineCog className=\"gear-icon\" />\n          <Link to=\"/profile\" className=\"link profile-name\">\n            {displayName}\n          </Link>\n        </h5>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\AuthForm.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\Home.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\routes\\Profile.js",["59"],"import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = () => {\n    DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .onSnapshot((snapshot) => {\n        const dwitteArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setDwitteArray(dwitteArray);\n      });\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"edit-profile-form\">\n        <input\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          onChange={onChange}\n          className=\"new-username-input\"\n        />\n        <button type=\"submit\" className=\"submit-username\">\n          수정\n        </button>\n        <button onClick={onLogoutClick} className=\"logout\">\n          logout\n        </button>\n      </form>\n      <div className=\"dwitte-container\">\n        {dwitteArray &&\n          dwitteArray.map((dw) => (\n            <Dwitte\n              key={dw.id}\n              dwitteObj={dw}\n              isOwner={dw.creatorId === userObj.uid}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\AuthWithSocial.js",[],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\DwitteFactory.js",["60"],"import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n\n  const onSubmit = async (event) => {\n    if (dwitte !== \"\") {\n      event.preventDefault();\n      let attachmentURL = \"\";\n      if (attachment !== \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentURL = await response.ref.getDownloadURL();\n      }\n      const dwitteObj = {\n        text: dwitte,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        creatorName: userObj.displayName,\n        attachmentURL,\n      };\n      await DBService.collection(\"dwitte\").add(dwitteObj);\n      setDwitte(\"\");\n      setAttachment(\"\");\n      setErrorMsg(\"\");\n    } else {\n      setErrorMsg(\"no dwitte!\");\n    }\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"dwitte-form\">\n      <input\n        value={dwitte}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's your mind?\"\n        maxLength={120}\n        className=\"dwitte-input\"\n      />\n      <input type=\"submit\" value=\"dwitte\" className=\"submit-dwitte\" />\n      <label for=\"fileInput\" className=\"file-upload-btn\">\n        <MdAddAPhoto />\n      </label>\n      <p className=\"dwitte-error-msg\">{errorMsg}</p>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"fileInput\"\n        className=\"file-input\"\n      />\n      {attachment && (\n        <>\n          <img\n            src={attachment}\n            width=\"50px\"\n            height=\"50px\"\n            className=\"attach-img\"\n          />\n          <button onClick={onClearAttachmentClick} className=\"delete-img\">\n            X\n          </button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n",["61","62"],"C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Dwitte.js",["63"],"import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\nimport { BsFillTrashFill, BsPencilSquare } from \"react-icons/bs\";\nimport { ImCancelCircle, ImCheckmark } from \"react-icons/im\";\n\nconst Dwitte = ({ dwitteObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div className=\"dwitte\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your dwitte\"\n              value={newDwitte}\n              required\n              onChange={onChange}\n              className=\"new-dwitte-input\"\n            />\n            <button type=\"submit\" className=\"submit-new-dwitte\">\n              <ImCheckmark />\n            </button>\n          </form>\n          <button onClick={toggleEditing} className=\"cancel-editing\">\n            <ImCancelCircle />\n          </button>\n        </>\n      ) : (\n        <>\n          <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n          <h4 className=\"dwitte-text\">{dwitteObj.text}</h4>\n          {dwitteObj.attachmentURL && (\n            <img\n              src={dwitteObj.attachmentURL}\n              width=\"110px\"\n              height=\"110px\"\n              className=\"dwitte-image\"\n            />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick} className=\"delete-dwitte\">\n                <BsFillTrashFill />\n              </button>\n              <button onClick={toggleEditing} className=\"edit-dwitte\">\n                <BsPencilSquare />\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","C:\\Users\\user\\Desktop\\Programming\\web-programming\\Personal\\dwitter\\src\\components\\Loading.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":8,"column":3,"nodeType":"70","endLine":8,"endColumn":12,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":48,"column":6,"nodeType":"73","endLine":48,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":88,"column":11,"nodeType":"77","endLine":93,"endColumn":13},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},{"ruleId":"75","severity":1,"message":"76","line":64,"column":13,"nodeType":"77","endLine":69,"endColumn":15},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisplayName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userObj.displayName] as a second argument to the useEffect Hook.","Identifier",["82"],"React Hook useEffect has a missing dependency: 'getMyDwittes'. Either include it or remove the dependency array.","ArrayExpression",["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Add dependencies array: [userObj.displayName]",{"range":"88","text":"89"},"Update the dependencies array to be: [getMyDwittes]",{"range":"90","text":"91"},[384,384],", [userObj.displayName]",[1250,1252],"[getMyDwittes]"]