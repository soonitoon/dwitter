[{"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js":"4","C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js":"5","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js":"6","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js":"7","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js":"8","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js":"9","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js":"10","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js":"11"},{"size":235,"mtime":1609697373358,"results":"12","hashOfConfig":"13"},{"size":1469,"mtime":1610016362037,"results":"14","hashOfConfig":"13"},{"size":871,"mtime":1610015590675,"results":"15","hashOfConfig":"13"},{"size":809,"mtime":1610014469450,"results":"16","hashOfConfig":"13"},{"size":657,"mtime":1609834381061,"results":"17","hashOfConfig":"13"},{"size":318,"mtime":1609932592939,"results":"18","hashOfConfig":"13"},{"size":1807,"mtime":1610007180162,"results":"19","hashOfConfig":"13"},{"size":1733,"mtime":1609957185872,"results":"20","hashOfConfig":"13"},{"size":1959,"mtime":1610008287839,"results":"21","hashOfConfig":"13"},{"size":4504,"mtime":1610102297800,"results":"22","hashOfConfig":"13"},{"size":925,"mtime":1610102772135,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"snwlns",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js",["51"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport mybase from \"mybase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["52","53"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js",["54"],"import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const history = useHistory();\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = async () => {\n    const dwittes = await DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    const dwitteArray = dwittes.docs.map((doc) => doc.data());\n    setDwitteArray(dwitteArray);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogoutClick}>log out</button>\n      <div>\n        {dwitteArray &&\n          dwitteArray.map((dw) => (\n            <Dwitte\n              key={dw.createdAt}\n              dwitteObj={dw}\n              isOwner={dw.creatorId === userObj.uid}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js",["55"],"import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst Dwitte = ({ dwitteObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your dwitte\"\n              value={newDwitte}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{dwitteObj.text}</h4>\n          {dwitteObj.attachmentURL && (\n            <img src={dwitteObj.attachmentURL} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEditing}>Edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js",["56","57"],"import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentURL = \"\";\n    if (attachment != \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const dwitteObj = {\n      text: dwitte,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    };\n\n    await DBService.collection(\"dwitte\").add(dwitteObj);\n    setDwitte(\"\");\n    setAttachment(\"\");\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={dwitte}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"dwitte\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachmentClick}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js",["58","59","60","61","62","63","64","65","66","67","68"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js",["69"],{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":43,"column":6,"nodeType":"80","endLine":43,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":55,"column":13,"nodeType":"84","endLine":55,"endColumn":77},{"ruleId":"85","severity":1,"message":"86","line":32,"column":20,"nodeType":"87","messageId":"88","endLine":32,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":67,"column":11,"nodeType":"84","endLine":67,"endColumn":62},{"ruleId":"70","severity":1,"message":"89","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":125,"column":13,"nodeType":"84","endLine":125,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":126,"column":13,"nodeType":"84","endLine":126,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":127,"column":13,"nodeType":"84","endLine":127,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":128,"column":13,"nodeType":"84","endLine":128,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":129,"column":13,"nodeType":"84","endLine":129,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":130,"column":13,"nodeType":"84","endLine":130,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":131,"column":13,"nodeType":"84","endLine":131,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":132,"column":13,"nodeType":"84","endLine":132,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":133,"column":13,"nodeType":"84","endLine":133,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":134,"column":13,"nodeType":"84","endLine":134,"endColumn":16},{"ruleId":"70","severity":1,"message":"92","line":2,"column":17,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},"no-unused-vars","'mybase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyDwittes'. Either include it or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [getMyDwittes]",{"range":"98","text":"99"},[1188,1190],"[getMyDwittes]"]