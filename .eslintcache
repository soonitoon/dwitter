[{"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js":"4","C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js":"5","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js":"6","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js":"7","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js":"8","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js":"9","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js":"10","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js":"11"},{"size":235,"mtime":1609697373358,"results":"12","hashOfConfig":"13"},{"size":1355,"mtime":1611670293453,"results":"14","hashOfConfig":"13"},{"size":871,"mtime":1610015590675,"results":"15","hashOfConfig":"13"},{"size":995,"mtime":1611680405142,"results":"16","hashOfConfig":"13"},{"size":657,"mtime":1609834381061,"results":"17","hashOfConfig":"13"},{"size":1050,"mtime":1611672651025,"results":"18","hashOfConfig":"13"},{"size":2117,"mtime":1611669881119,"results":"19","hashOfConfig":"13"},{"size":2639,"mtime":1611667559368,"results":"20","hashOfConfig":"13"},{"size":2715,"mtime":1611666830240,"results":"21","hashOfConfig":"13"},{"size":4486,"mtime":1611715467128,"results":"22","hashOfConfig":"13"},{"size":925,"mtime":1610102772135,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"snwlns",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js",["53"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport mybase from \"mybase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["54","55"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js",["56"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { IoLogoTwitter } from \"react-icons/io5\";\nimport { HiHashtag, HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  });\n  return (\n    <nav>\n      <div className=\"navContainer\">\n        <IoLogoTwitter className=\"twitteIcon\" />\n        <ul className=\"linkList\">\n          <li className=\"goHome\">\n            <HiHashtag className=\"hashIcon\" />\n            <Link to=\"/\" className=\"link\">\n              Home\n            </Link>\n          </li>\n          <li className=\"goProfile\">\n            <HiOutlineCog className=\"gearIcon\" />\n            <Link to=\"/profile\" className=\"link\">\n              {displayName} profile\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js",["57"],"import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const history = useHistory();\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = async () => {\n    const dwittes = await DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    const dwitteArray = dwittes.docs.map((doc) => doc.data());\n    setDwitteArray(dwitteArray);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <div className=\"profileContainer\">\n        <form onSubmit={onSubmit} className=\"editProfileForm\">\n          <input\n            type=\"text\"\n            value={newDisplayName}\n            placeholder=\"Display name\"\n            onChange={onChange}\n            className=\"userNameInput\"\n          />\n          <button type=\"submit\" className=\"submitNewUserName\">\n            update\n          </button>\n        </form>\n        <button onClick={onLogoutClick} className=\"logOut\">\n          log out\n        </button>\n        <div className=\"myDwitteContainer\">\n          {dwitteArray &&\n            dwitteArray.map((dw) => (\n              <Dwitte\n                key={dw.createdAt}\n                dwitteObj={dw}\n                isOwner={dw.creatorId === userObj.uid}\n              />\n            ))}\n        </div>\n      </div>\n      <div className=\"dummy\"></div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js",["58"],"import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\nimport { BsFillTrashFill, BsPencilSquare } from \"react-icons/bs\";\nimport { ImCancelCircle, ImCheckmark } from \"react-icons/im\";\n\nconst Dwitte = ({ dwitteObj, isOwner, userName }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div className=\"dwitte\">\n      {editing ? (\n        <div className=\"editContainer\">\n          <form onSubmit={onSubmit}>\n            <div className=\"context\">\n              <h4 className=\"userName\">{dwitteObj.creatorName}</h4>\n              <input\n                type=\"text\"\n                placeholder=\"Edit your dwitte\"\n                value={newDwitte}\n                required\n                onChange={onChange}\n                className=\"editInput\"\n              />\n              <button type=\"submit\" className=\"submitEditBtn\">\n                <ImCheckmark />\n              </button>\n            </div>\n          </form>\n          <button onClick={toggleEditing} className=\"cancelEditBtn\">\n            <ImCancelCircle />\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"context\">\n            <h4 className=\"userName\">{dwitteObj.creatorName}</h4>\n            <h4 className=\"dwitteText\">{dwitteObj.text}</h4>\n          </div>\n          {dwitteObj.attachmentURL && (\n            <img\n              src={dwitteObj.attachmentURL}\n              width=\"70px\"\n              height=\"70px\"\n              className=\"attachmentImg\"\n            />\n          )}\n          {isOwner && (\n            <div className=\"dwitteBtnContainer\">\n              <button onClick={onDeleteClick} className=\"dwitteBtn\">\n                <BsFillTrashFill />\n              </button>\n              <button onClick={toggleEditing} className=\"dwitteBtn\">\n                <BsPencilSquare />\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js",["59","60"],"import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n\n  const onSubmit = async (event) => {\n    if (dwitte !== \"\") {\n      event.preventDefault();\n      let attachmentURL = \"\";\n      if (attachment != \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentURL = await response.ref.getDownloadURL();\n      }\n      const dwitteObj = {\n        text: dwitte,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        creatorName: userObj.displayName,\n        attachmentURL,\n      };\n      await DBService.collection(\"dwitte\").add(dwitteObj);\n      setDwitte(\"\");\n      setAttachment(\"\");\n      setErrorMsg(\"\");\n    } else {\n      setErrorMsg(\"no dwitte!\");\n    }\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"dwitteForm\">\n      <div className=\"dwitteInputContainer\">\n        <input\n          value={dwitte}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's your mind?\"\n          maxLength={120}\n          className=\"dwitteInput\"\n        />\n        <p className=\"dwitteErrorMsg\">{errorMsg}</p>\n      </div>\n      <label for=\"fileInput\" className=\"fileUploadBtn\">\n        <MdAddAPhoto />\n      </label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"fileInput\"\n        className=\"fileInput\"\n      />\n      {attachment && (\n        <div className=\"attachmentContainer\">\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <br />\n          <button onClick={onClearAttachmentClick} className=\"clearAttachment\">\n            X\n          </button>\n        </div>\n      )}\n      <input type=\"submit\" value=\"dwitte\" className=\"submitDwitte\" />\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js",["61","62","63","64","65","66","67","68","69","70","71"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js",["72"],"import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst AuthWithSocial = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await AuthService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"socialContainer\">\n      <h1 className=\"socialTitle\">기존 계정으로 가입하세요.</h1>\n      <button onClick={onSocialClick} name=\"google\" className=\"googleButton\">\n        Goolge로 가입하기\n      </button>\n      <button onClick={onSocialClick} name=\"github\" className=\"githubButton\">\n        Github으로 가입하기\n      </button>\n    </div>\n  );\n};\n\nexport default AuthWithSocial;\n",{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":9,"column":3,"nodeType":"75","endLine":9,"endColumn":12,"suggestions":"83"},{"ruleId":"81","severity":1,"message":"84","line":43,"column":6,"nodeType":"85","endLine":43,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":68,"column":13,"nodeType":"89","endLine":73,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":37,"column":22,"nodeType":"92","messageId":"93","endLine":37,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":89,"column":11,"nodeType":"89","endLine":89,"endColumn":62},{"ruleId":"73","severity":1,"message":"94","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":124,"column":13,"nodeType":"89","endLine":124,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":125,"column":13,"nodeType":"89","endLine":125,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":126,"column":13,"nodeType":"89","endLine":126,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":127,"column":13,"nodeType":"89","endLine":127,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":128,"column":13,"nodeType":"89","endLine":128,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":129,"column":13,"nodeType":"89","endLine":129,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":130,"column":13,"nodeType":"89","endLine":130,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":131,"column":13,"nodeType":"89","endLine":131,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":132,"column":13,"nodeType":"89","endLine":132,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":133,"column":13,"nodeType":"89","endLine":133,"endColumn":16},{"ruleId":"73","severity":1,"message":"97","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":25},"no-unused-vars","'mybase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisplayName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userObj.displayName] as a second argument to the useEffect Hook.",["100"],"React Hook useEffect has a missing dependency: 'getMyDwittes'. Either include it or remove the dependency array.","ArrayExpression",["101"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Add dependencies array: [userObj.displayName]",{"range":"106","text":"107"},"Update the dependencies array to be: [getMyDwittes]",{"range":"108","text":"109"},[444,444],", [userObj.displayName]",[1188,1190],"[getMyDwittes]"]