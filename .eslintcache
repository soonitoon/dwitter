[{"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js":"4","C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js":"5","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js":"6","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js":"7","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js":"8","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js":"9","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js":"10","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js":"11"},{"size":235,"mtime":1609697373358,"results":"12","hashOfConfig":"13"},{"size":1193,"mtime":1611565029081,"results":"14","hashOfConfig":"13"},{"size":871,"mtime":1610015590675,"results":"15","hashOfConfig":"13"},{"size":1025,"mtime":1611664008656,"results":"16","hashOfConfig":"13"},{"size":657,"mtime":1609834381061,"results":"17","hashOfConfig":"13"},{"size":1076,"mtime":1611564356302,"results":"18","hashOfConfig":"13"},{"size":1807,"mtime":1610007180162,"results":"19","hashOfConfig":"13"},{"size":2147,"mtime":1611664065030,"results":"20","hashOfConfig":"13"},{"size":2618,"mtime":1611652175197,"results":"21","hashOfConfig":"13"},{"size":4504,"mtime":1610102297800,"results":"22","hashOfConfig":"13"},{"size":925,"mtime":1610102772135,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"snwlns",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js",["52"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport mybase from \"mybase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["53","54"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js",["55"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { IoLogoTwitter } from \"react-icons/io5\";\nimport { HiHashtag, HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    console.log(userObj);\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  });\n  return (\n    <nav>\n      <div className=\"navContainer\">\n        <IoLogoTwitter className=\"twitteIcon\" />\n        <ul className=\"linkList\">\n          <li className=\"goHome\">\n            <HiHashtag className=\"hashIcon\" />\n            <Link to=\"/\" className=\"link\">\n              Home\n            </Link>\n          </li>\n          <li className=\"goProfile\">\n            <HiOutlineCog className=\"gearIcon\" />\n            <Link to=\"/profile\" className=\"link\">\n              {displayName} profile\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js",["56"],"import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const history = useHistory();\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = async () => {\n    const dwittes = await DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    const dwitteArray = dwittes.docs.map((doc) => doc.data());\n    setDwitteArray(dwitteArray);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogoutClick}>log out</button>\n      <div>\n        {dwitteArray &&\n          dwitteArray.map((dw) => (\n            <Dwitte\n              key={dw.createdAt}\n              dwitteObj={dw}\n              isOwner={dw.creatorId === userObj.uid}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js",["57"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\DwitteFactory.js",["58","59"],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\AuthForm.js",["60","61","62","63","64","65","66","67","68","69","70"],"import React, { useEffect, useState } from \"react\";\nimport { AuthService } from \"mybase\";\nimport \"components/CSS/style_AuthForm.css\";\nimport AuthWithSocial from \"components/AuthWithSocial\";\nimport { BsPeople, BsSearch } from \"react-icons/bs\";\nimport { IoChatbubbleOutline, IoLogoTwitter } from \"react-icons/io5\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await AuthService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await AuthService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onGetBlue = (event) => {\n    event.target.parentNode.classList.add(\"getBlue\");\n  };\n  const onRemoveBlue = (event) => {\n    event.target.parentNode.classList.remove(\"getBlue\");\n  };\n\n  return (\n    <>\n      <div className=\"AuthContainer\">\n        <div className=\"leftSide\">\n          <IoLogoTwitter className=\"backgroundIcon\" />\n          <div className=\"textBox\">\n            <div className=\"eachText\">\n              <BsSearch className=\"icon\" />\n              <h3>관심사를 팔로우하세요.</h3>\n            </div>\n            <div className=\"eachText\">\n              <BsPeople className=\"icon\" />\n              <h3>\n                사람들이 무엇에 대해 이야기하고 있는지\n                <br />\n                알아보세요.\n              </h3>\n            </div>\n            <div className=\"eachText\">\n              <IoChatbubbleOutline className=\"icon\" />\n              <h3>대화에 참여하세요.</h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"rightSide\">\n          <form onSubmit={onSubmit} className=\"emailLoginForm\">\n            <div className=\"emailContainer\">\n              <div className=\"emailInputContainer\">\n                <p className=\"emailInputPlaceholder\">사용자 이메일</p>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  required\n                  value={email}\n                  onChange={onChange}\n                  onFocus={onGetBlue}\n                  onBlur={onRemoveBlue}\n                  className=\"emailInput\"\n                ></input>\n              </div>\n              <span>{error}</span>\n            </div>\n            <div className=\"passwordContainer\">\n              <div className=\"passwordInputContainer\">\n                <p className=\"passwordInputPlaceholder\">비밀번호</p>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  value={password}\n                  onChange={onChange}\n                  onFocus={onGetBlue}\n                  onBlur={onRemoveBlue}\n                  className=\"passwordInput\"\n                ></input>\n              </div>\n              <button onClick={toggleAccount} className=\"toggle\">\n                {newAccount ? \"계정이 있나요?\" : \"계정 만들기\"}\n              </button>\n            </div>\n            <input\n              type=\"submit\"\n              className=\"submitAccount\"\n              value={newAccount ? \"만들기\" : \"로그인\"}\n            ></input>\n          </form>\n          <div className=\"rightDown\">\n            <IoLogoTwitter className=\"dwitteIcon\" />\n            <h1 className=\"title\">\n              지금 전 세계에서 무슨 일이\n              <br /> 일어나고 있는지 알아보세요.\n            </h1>\n            <AuthWithSocial />\n          </div>\n        </div>\n        <footer className=\"AuthFooter\">\n          <div className=\"aContainer\">\n            <a>맞아요</a>\n            <a>이건</a>\n            <a>footer</a>\n            <a>입니다</a>\n            <a>아무도</a>\n            <a>보지않죠</a>\n            <a>그저</a>\n            <a>자리를</a>\n            <a>묵묵히</a>\n            <a>지킵니다</a>\n          </div>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default AuthForm;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\AuthWithSocial.js",["71"],"import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst AuthWithSocial = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await AuthService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"socialContainer\">\n      <h1 className=\"socialTitle\">기존 계정으로 가입하세요.</h1>\n      <button onClick={onSocialClick} name=\"google\" className=\"googleButton\">\n        Goolge로 가입하기\n      </button>\n      <button onClick={onSocialClick} name=\"github\" className=\"githubButton\">\n        Github으로 가입하기\n      </button>\n    </div>\n  );\n};\n\nexport default AuthWithSocial;\n",{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":3,"nodeType":"74","endLine":9,"endColumn":12,"suggestions":"82"},{"ruleId":"80","severity":1,"message":"83","line":43,"column":6,"nodeType":"84","endLine":43,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":57,"column":13,"nodeType":"88","endLine":62,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":36,"column":22,"nodeType":"91","messageId":"92","endLine":36,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":87,"column":11,"nodeType":"88","endLine":87,"endColumn":62},{"ruleId":"72","severity":1,"message":"93","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":125,"column":13,"nodeType":"88","endLine":125,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":126,"column":13,"nodeType":"88","endLine":126,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":127,"column":13,"nodeType":"88","endLine":127,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":128,"column":13,"nodeType":"88","endLine":128,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":129,"column":13,"nodeType":"88","endLine":129,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":130,"column":13,"nodeType":"88","endLine":130,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":131,"column":13,"nodeType":"88","endLine":131,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":132,"column":13,"nodeType":"88","endLine":132,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":133,"column":13,"nodeType":"88","endLine":133,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":134,"column":13,"nodeType":"88","endLine":134,"endColumn":16},{"ruleId":"72","severity":1,"message":"96","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":25},"no-unused-vars","'mybase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisplayName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userObj] as a second argument to the useEffect Hook.",["99"],"React Hook useEffect has a missing dependency: 'getMyDwittes'. Either include it or remove the dependency array.","ArrayExpression",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Add dependencies array: [userObj]",{"range":"105","text":"106"},"Update the dependencies array to be: [getMyDwittes]",{"range":"107","text":"108"},[470,470],", [userObj]",[1188,1190],"[getMyDwittes]"]