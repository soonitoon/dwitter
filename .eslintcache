[{"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Auth.js":"4","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js":"5","C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js":"6","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js":"7","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js":"8","C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js":"9"},{"size":235,"mtime":1609697373358,"results":"10","hashOfConfig":"11"},{"size":718,"mtime":1609775198947,"results":"12","hashOfConfig":"11"},{"size":811,"mtime":1609932531538,"results":"13","hashOfConfig":"11"},{"size":2336,"mtime":1609778440879,"results":"14","hashOfConfig":"11"},{"size":2539,"mtime":1609910821166,"results":"15","hashOfConfig":"11"},{"size":657,"mtime":1609834381061,"results":"16","hashOfConfig":"11"},{"size":318,"mtime":1609932592939,"results":"17","hashOfConfig":"11"},{"size":1196,"mtime":1609933286462,"results":"18","hashOfConfig":"11"},{"size":1733,"mtime":1609847549809,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"snwlns",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"C:\\Users\\user\\Desktop\\dwitter\\src\\index.js",["42"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport mybase from \"mybase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["43","44"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Auth.js",["45","46"],"import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await AuthService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await AuthService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await AuthService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        ></input>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log in\"}\n        ></input>\n        <span>{error}</span>\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Log In\" : \"create account\"}\n      </span>\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Goolge\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Home.js",["47","48"],"C:\\Users\\user\\Desktop\\dwitter\\src\\mybase.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Navigation.js",[],"C:\\Users\\user\\Desktop\\dwitter\\src\\routes\\Profile.js",["49","50"],"C:\\Users\\user\\Desktop\\dwitter\\src\\components\\Dwitte.js",["51"],"import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst Dwitte = ({ dwitteObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your dwitte\"\n              value={newDwitte}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{dwitteObj.text}</h4>\n          {dwitteObj.attachmentURL && (\n            <img src={dwitteObj.attachmentURL} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEditing}>Edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n",{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":31,"column":9,"nodeType":"54","messageId":"55","endLine":31,"endColumn":13},{"ruleId":"52","severity":1,"message":"60","line":52,"column":11,"nodeType":"54","messageId":"55","endLine":52,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":24,"column":20,"nodeType":"63","messageId":"64","endLine":24,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":83,"column":13,"nodeType":"67","endLine":83,"endColumn":64},{"ruleId":"52","severity":1,"message":"68","line":7,"column":26,"nodeType":"54","messageId":"55","endLine":7,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":31,"column":6,"nodeType":"71","endLine":31,"endColumn":8,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"66","line":55,"column":13,"nodeType":"67","endLine":55,"endColumn":77},"no-unused-vars","'mybase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setNewDisplayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyDwittes'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [getMyDwittes]",{"range":"78","text":"79"},[826,828],"[getMyDwittes]"]