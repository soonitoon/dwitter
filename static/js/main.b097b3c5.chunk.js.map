{"version":3,"sources":["mybase.js","components/AuthWithSocial.js","routes/AuthForm.js","components/Dwitte.js","components/DwitteFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_PP_ID","firebase","initializeApp","firebaseInstance","AuthService","auth","DBService","firestore","storageService","storage","AuthWithSocial","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","onClick","AuthForm","useState","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onGetBlue","parentNode","classList","add","onRemoveBlue","remove","type","required","onFocus","onBlur","prev","Dwitte","dwitteObj","isOwner","userName","editing","setEditing","text","newDwitte","setNewDwitte","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","creatorName","placeholder","src","width","height","DwitteFactory","userObj","dwitte","setDwitte","attachment","setAttachment","errorMsg","setErrorMsg","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","collection","maxLength","for","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","Home","dwittes","setDwittes","useEffect","onSnapshot","snapshot","dwitteArray","docs","map","data","dw","key","Navigation","setDisplayName","console","log","to","Profile","refreshUserObj","history","useHistory","setDwitteArray","newDisplayName","setNewDisplayName","getMyDwittes","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","User","newProfile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b097b3c5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_PP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const AuthService = firebase.auth();\nexport const DBService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst AuthWithSocial = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await AuthService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"socialContainer\">\n      <h1 className=\"socialTitle\">기존 계정으로 가입하세요.</h1>\n      <button onClick={onSocialClick} name=\"google\" className=\"googleButton\">\n        Goolge로 가입하기\n      </button>\n      <button onClick={onSocialClick} name=\"github\" className=\"githubButton\">\n        Github으로 가입하기\n      </button>\n    </div>\n  );\n};\n\nexport default AuthWithSocial;\n","import React, { useEffect, useState } from \"react\";\nimport { AuthService } from \"mybase\";\nimport AuthWithSocial from \"components/AuthWithSocial\";\nimport { BsPeople, BsSearch } from \"react-icons/bs\";\nimport { IoChatbubbleOutline, IoLogoTwitter } from \"react-icons/io5\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await AuthService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await AuthService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onGetBlue = (event) => {\n    event.target.parentNode.classList.add(\"getBlue\");\n  };\n  const onRemoveBlue = (event) => {\n    event.target.parentNode.classList.remove(\"getBlue\");\n  };\n\n  return (\n    <>\n      <div className=\"AuthContainer\">\n        <div className=\"leftSide\">\n          <IoLogoTwitter className=\"backgroundIcon\" />\n          <div className=\"textBox\">\n            <div className=\"eachText\">\n              <BsSearch className=\"icon\" />\n              <h3>관심사를 팔로우하세요.</h3>\n            </div>\n            <div className=\"eachText\">\n              <BsPeople className=\"icon\" />\n              <h3>\n                사람들이 무엇에 대해 이야기하고 있는지\n                <br />\n                알아보세요.\n              </h3>\n            </div>\n            <div className=\"eachText\">\n              <IoChatbubbleOutline className=\"icon\" />\n              <h3>대화에 참여하세요.</h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"rightSide\">\n          <form onSubmit={onSubmit} className=\"emailLoginForm\">\n            <div className=\"emailContainer\">\n              <div className=\"emailInputContainer\">\n                <p className=\"emailInputPlaceholder\">사용자 이메일</p>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  required\n                  value={email}\n                  onChange={onChange}\n                  onFocus={onGetBlue}\n                  onBlur={onRemoveBlue}\n                  className=\"emailInput\"\n                ></input>\n              </div>\n              <span>{error}</span>\n            </div>\n            <div className=\"passwordContainer\">\n              <div className=\"passwordInputContainer\">\n                <p className=\"passwordInputPlaceholder\">비밀번호</p>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  value={password}\n                  onChange={onChange}\n                  onFocus={onGetBlue}\n                  onBlur={onRemoveBlue}\n                  className=\"passwordInput\"\n                ></input>\n              </div>\n              <button onClick={toggleAccount} className=\"toggle\">\n                {newAccount ? \"계정이 있나요?\" : \"계정 만들기\"}\n              </button>\n            </div>\n            <input\n              type=\"submit\"\n              className=\"submitAccount\"\n              value={newAccount ? \"만들기\" : \"로그인\"}\n            ></input>\n          </form>\n          <div className=\"rightDown\">\n            <IoLogoTwitter className=\"dwitteIcon\" />\n            <h1 className=\"title\">\n              지금 전 세계에서 무슨 일이\n              <br /> 일어나고 있는지 알아보세요.\n            </h1>\n            <AuthWithSocial />\n          </div>\n        </div>\n        <footer className=\"AuthFooter\">\n          <div className=\"aContainer\">\n            <a>맞아요</a>\n            <a>이건</a>\n            <a>footer</a>\n            <a>입니다</a>\n            <a>아무도</a>\n            <a>보지않죠</a>\n            <a>그저</a>\n            <a>자리를</a>\n            <a>묵묵히</a>\n            <a>지킵니다</a>\n          </div>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\nimport { BsFillTrashFill, BsPencilSquare } from \"react-icons/bs\";\nimport { ImCancelCircle, ImCheckmark } from \"react-icons/im\";\n\nconst Dwitte = ({ dwitteObj, isOwner, userName }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div className=\"dwitte\">\n      {editing ? (\n        <div className=\"editContainer\">\n          <form onSubmit={onSubmit}>\n            <div className=\"context\">\n              <h4 className=\"userName\">{dwitteObj.creatorName}</h4>\n              <input\n                type=\"text\"\n                placeholder=\"Edit your dwitte\"\n                value={newDwitte}\n                required\n                onChange={onChange}\n                className=\"editInput\"\n              />\n              <button type=\"submit\" className=\"submitEditBtn\">\n                <ImCheckmark />\n              </button>\n            </div>\n          </form>\n          <button onClick={toggleEditing} className=\"cancelEditBtn\">\n            <ImCancelCircle />\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"context\">\n            <h4 className=\"userName\">{dwitteObj.creatorName}</h4>\n            <h4 className=\"dwitteText\">{dwitteObj.text}</h4>\n          </div>\n          {dwitteObj.attachmentURL && (\n            <img\n              src={dwitteObj.attachmentURL}\n              width=\"70px\"\n              height=\"70px\"\n              className=\"attachmentImg\"\n            />\n          )}\n          {isOwner && (\n            <div className=\"dwitteBtnContainer\">\n              <button onClick={onDeleteClick} className=\"dwitteBtn\">\n                <BsFillTrashFill />\n              </button>\n              <button onClick={toggleEditing} className=\"dwitteBtn\">\n                <BsPencilSquare />\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n\n  const onSubmit = async (event) => {\n    if (dwitte !== \"\") {\n      event.preventDefault();\n      let attachmentURL = \"\";\n      if (attachment != \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentURL = await response.ref.getDownloadURL();\n      }\n      const dwitteObj = {\n        text: dwitte,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        creatorName: userObj.displayName,\n        attachmentURL,\n      };\n      await DBService.collection(\"dwitte\").add(dwitteObj);\n      setDwitte(\"\");\n      setAttachment(\"\");\n      setErrorMsg(\"\");\n    } else {\n      setErrorMsg(\"no dwitte!\");\n    }\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"dwitteForm\">\n      <div className=\"dwitteInputContainer\">\n        <input\n          value={dwitte}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's your mind?\"\n          maxLength={120}\n          className=\"dwitteInput\"\n        />\n        <p className=\"dwitteErrorMsg\">{errorMsg}</p>\n      </div>\n      <label for=\"fileInput\" className=\"fileUploadBtn\">\n        <MdAddAPhoto />\n      </label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"fileInput\"\n        className=\"fileInput\"\n      />\n      {attachment && (\n        <div className=\"attachmentContainer\">\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <br />\n          <button onClick={onClearAttachmentClick} className=\"clearAttachment\">\n            X\n          </button>\n        </div>\n      )}\n      <input type=\"submit\" value=\"dwitte\" className=\"submitDwitte\" />\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n","import { DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport Dwitte from \"components/Dwitte\";\nimport DwitteFactory from \"components/DwitteFactory\";\n\nconst Home = ({ userObj }) => {\n  const [dwittes, setDwittes] = useState([]);\n\n  useEffect(() => {\n    DBService.collection(\"dwitte\").onSnapshot((snapshot) => {\n      const dwitteArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setDwittes(dwitteArray);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"centerContainer\">\n        <DwitteFactory userObj={userObj} />\n        <div className=\"dwitteContainer\">\n          {dwittes.map((dw) => (\n            <Dwitte\n              key={dw.id}\n              dwitteObj={dw}\n              isOwner={dw.creatorId === userObj.uid}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"dummy\"></div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { IoLogoTwitter } from \"react-icons/io5\";\nimport { HiHashtag, HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    console.log(userObj);\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  });\n  return (\n    <nav>\n      <div className=\"navContainer\">\n        <IoLogoTwitter className=\"twitteIcon\" />\n        <ul className=\"linkList\">\n          <li className=\"goHome\">\n            <HiHashtag className=\"hashIcon\" />\n            <Link to=\"/\" className=\"link\">\n              Home\n            </Link>\n          </li>\n          <li className=\"goProfile\">\n            <HiOutlineCog className=\"gearIcon\" />\n            <Link to=\"/profile\" className=\"link\">\n              {displayName} profile\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const history = useHistory();\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = async () => {\n    const dwittes = await DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    const dwitteArray = dwittes.docs.map((doc) => doc.data());\n    setDwitteArray(dwitteArray);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <div className=\"profileContainer\">\n        <form onSubmit={onSubmit} className=\"editProfileForm\">\n          <input\n            type=\"text\"\n            value={newDisplayName}\n            placeholder=\"Display name\"\n            onChange={onChange}\n            className=\"userNameInput\"\n          />\n          <button type=\"submit\" className=\"submitNewUserName\">\n            update\n          </button>\n        </form>\n        <button onClick={onLogoutClick} className=\"logOut\">\n          log out\n        </button>\n        <div className=\"myDwitteContainer\">\n          {dwitteArray &&\n            dwitteArray.map((dw) => (\n              <Dwitte\n                key={dw.createdAt}\n                dwitteObj={dw}\n                isOwner={dw.creatorId === userObj.uid}\n              />\n            ))}\n        </div>\n      </div>\n      <div className=\"dummy\"></div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AuthForm from \"routes/AuthForm\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUserObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUserObj={refreshUserObj} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <AuthForm />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { AuthService } from \"mybase\";\nimport \"components/CSS/reset.css\";\nimport \"components/CSS/style_Profile.css\";\nimport \"components/CSS/style_Main.css\";\nimport \"components/CSS/style_AuthForm.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(AuthService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    AuthService.onAuthStateChanged((User) => {\n      if (User) {\n        setUserObj({\n          displayName: User.displayName,\n          uid: User.uid,\n          updateProfile: (newProfile) => {\n            User.updateProfile(newProfile);\n          },\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUserObj = (newDisplayName) => {\n    setUserObj({\n      displayName: newDisplayName,\n      uid: userObj.uid,\n      updateProfile: (newProfile) => {\n        userObj.updateProfile(newProfile);\n      },\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUserObj={refreshUserObj}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"init...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport mybase from \"mybase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}