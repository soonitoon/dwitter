{"version":3,"sources":["mybase.js","components/AuthWithSocial.js","routes/AuthForm.js","components/Dwitte.js","components/DwitteFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/Loading.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_PP_ID","firebase","initializeApp","firebaseInstance","AuthService","auth","DBService","firestore","storageService","storage","AuthWithSocial","useState","socialLoginError","SetsocialLoginError","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","message","onClick","className","AuthForm","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","required","placeholder","prev","Dwitte","dwitteObj","isOwner","editing","setEditing","text","newDwitte","setNewDwitte","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","creatorName","src","width","height","DwitteFactory","userObj","dwitte","setDwitte","attachment","setAttachment","errorMsg","setErrorMsg","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","collection","add","maxLength","for","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","Home","dwittes","setDwittes","useEffect","orderBy","onSnapshot","snapshot","dwitteArray","docs","map","data","dw","key","Navigation","setDisplayName","to","Profile","refreshUserObj","setDwitteArray","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","where","signOut","push","AppRouter","isLoggedIn","exact","path","Loading","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","User","newProfile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d373bfd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_PP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const AuthService = firebase.auth();\nexport const DBService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst AuthWithSocial = () => {\n  const [socialLoginError, SetsocialLoginError] = useState(\"\");\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    try {\n      await AuthService.signInWithPopup(provider);\n    } catch (err) {\n      SetsocialLoginError(err.message);\n    }\n  };\n  return (\n    <>\n      <button onClick={onSocialClick} name=\"google\" className=\"google-login\">\n        Goolge로 가입하기\n      </button>\n      <br />\n      <button onClick={onSocialClick} name=\"github\" className=\"github-login\">\n        Github으로 가입하기\n      </button>\n      <p className=\"login-error\">{socialLoginError}</p>\n    </>\n  );\n};\n\nexport default AuthWithSocial;\n","import React, { useState } from \"react\";\nimport { AuthService } from \"mybase\";\nimport AuthWithSocial from \"components/AuthWithSocial\";\nimport { BsPeople, BsSearch } from \"react-icons/bs\";\nimport { IoLogoTwitter } from \"react-icons/io5\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await AuthService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await AuthService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <IoLogoTwitter className=\"top-dwitte-icon\" />\n      <h1 className=\"main-title\">\n        지금 전 세계에서 무슨 일이\n        <br /> 일어나고 있는지 알아보세요.\n      </h1>\n      <h5 className=\"sub-title\">오늘 드위터에 가입하세요.</h5>\n      <AuthWithSocial />\n      <div className=\"color-box\">\n        <h5 className=\"color-box-text\">\n          <BsSearch className=\"color-box-icon\" />\n          <div>관심사를 팔로우 하세요.</div>\n        </h5>\n        <h5 className=\"color-box-text\">\n          <BsPeople className=\"color-box-icon\" />\n          <di>\n            사람들이 무엇에 대해 이야기하고\n            <br />\n            있는지 알아보세요.\n          </di>\n        </h5>\n      </div>\n      <h5 className=\"make-account-title\">혹은, 직접 로그인.</h5>\n      <form onSubmit={onSubmit} className=\"LoginForm\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          required\n          value={email}\n          onChange={onChange}\n          placeholder=\"example@email.com\"\n          className=\"email-input\"\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={onChange}\n          placeholder=\"password\"\n          className=\"password-input\"\n        ></input>\n        <input\n          type=\"submit\"\n          className=\"submit-account\"\n          value={newAccount ? \"만들기\" : \"로그인\"}\n        ></input>\n        <button onClick={toggleAccount} className=\"toggle-login\">\n          {newAccount ? \"계정이 있나요?\" : \"계정 만들기\"}\n        </button>\n      </form>\n      <p className=\"login-error\">{error}</p>\n      <footer className=\"AuthFooter\">\n        <p>트위터 클론코딩 -드위터</p>\n      </footer>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { DBService, storageService } from \"mybase\";\nimport React, { useState } from \"react\";\nimport { BsFillTrashFill, BsPencilSquare } from \"react-icons/bs\";\nimport { ImCancelCircle, ImCheckmark } from \"react-icons/im\";\n\nconst Dwitte = ({ dwitteObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  return (\n    <div className=\"dwitte\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your dwitte\"\n              value={newDwitte}\n              required\n              onChange={onChange}\n              className=\"new-dwitte-input\"\n            />\n            <button type=\"submit\" className=\"submit-new-dwitte\">\n              <ImCheckmark />\n            </button>\n          </form>\n          <button onClick={toggleEditing} className=\"cancel-editing\">\n            <ImCancelCircle />\n          </button>\n        </>\n      ) : (\n        <>\n          <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n          <h4 className=\"dwitte-text\">{dwitteObj.text}</h4>\n          {dwitteObj.attachmentURL && (\n            <img\n              src={dwitteObj.attachmentURL}\n              width=\"110px\"\n              height=\"110px\"\n              className=\"dwitte-image\"\n            />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick} className=\"delete-dwitte\">\n                <BsFillTrashFill />\n              </button>\n              <button onClick={toggleEditing} className=\"edit-dwitte\">\n                <BsPencilSquare />\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n\n  const onSubmit = async (event) => {\n    if (dwitte !== \"\") {\n      event.preventDefault();\n      let attachmentURL = \"\";\n      if (attachment !== \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentURL = await response.ref.getDownloadURL();\n      }\n      const dwitteObj = {\n        text: dwitte,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        creatorName: userObj.displayName,\n        attachmentURL,\n      };\n      await DBService.collection(\"dwitte\").add(dwitteObj);\n      setDwitte(\"\");\n      setAttachment(\"\");\n      setErrorMsg(\"\");\n    } else {\n      setErrorMsg(\"no dwitte!\");\n    }\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"dwitte-form\">\n      <input\n        value={dwitte}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's your mind?\"\n        maxLength={120}\n        className=\"dwitte-input\"\n      />\n      <input type=\"submit\" value=\"dwitte\" className=\"submit-dwitte\" />\n      <label for=\"fileInput\" className=\"file-upload-btn\">\n        <MdAddAPhoto />\n      </label>\n      <p className=\"dwitte-error-msg\">{errorMsg}</p>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"fileInput\"\n        className=\"file-input\"\n      />\n      {attachment && (\n        <>\n          <img\n            src={attachment}\n            width=\"50px\"\n            height=\"50px\"\n            className=\"attach-img\"\n          />\n          <button onClick={onClearAttachmentClick} className=\"delete-img\">\n            X\n          </button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n","import { DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport Dwitte from \"components/Dwitte\";\nimport DwitteFactory from \"components/DwitteFactory\";\n\nconst Home = ({ userObj }) => {\n  const [dwittes, setDwittes] = useState([]);\n\n  const getDwittes = () => {\n    DBService.collection(\"dwitte\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const dwitteArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setDwittes(dwitteArray);\n      });\n  };\n\n  useEffect(getDwittes, []);\n\n  return (\n    <div className=\"dwitte-container\">\n      <DwitteFactory userObj={userObj} />\n      {dwittes.map((dw) => (\n        <Dwitte\n          key={dw.id}\n          dwitteObj={dw}\n          isOwner={dw.creatorId === userObj.uid}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  });\n  return (\n    <nav>\n      <div className=\"nav-container\">\n        <h5 className=\"home-link\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n        </h5>\n        <h5 className=\"profile-link\">\n          <HiOutlineCog className=\"gear-icon\" />\n          <Link to=\"/profile\" className=\"link profile-name\">\n            {displayName}\n          </Link>\n        </h5>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = () => {\n    DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .onSnapshot((snapshot) => {\n        const dwitteArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setDwitteArray(dwitteArray);\n      });\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyDwittes();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"edit-profile-form\">\n        <input\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          onChange={onChange}\n          className=\"new-username-input\"\n        />\n        <button type=\"submit\" className=\"submit-username\">\n          수정\n        </button>\n        <button onClick={onLogoutClick} className=\"logout\">\n          logout\n        </button>\n      </form>\n      <div className=\"dwitte-container\">\n        {dwitteArray &&\n          dwitteArray.map((dw) => (\n            <Dwitte\n              key={dw.id}\n              dwitteObj={dw}\n              isOwner={dw.creatorId === userObj.uid}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AuthForm from \"routes/AuthForm\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUserObj }) => {\n  return (\n    <Router>\n      {isLoggedIn ? (\n        <>\n          <Navigation userObj={userObj} />\n          <Route exact path=\"/\">\n            <Home userObj={userObj} />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile userObj={userObj} refreshUserObj={refreshUserObj} />\n          </Route>\n        </>\n      ) : (\n        <Route path=\"/\">\n          <AuthForm />\n        </Route>\n      )}\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"background-color\">\r\n      <div className=\"loading\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport Loading from \"components/Loading\";\nimport { AuthService } from \"mybase\";\nimport \"components/CSS/reset.css\";\nimport \"components/CSS/style_Loading.css\";\nimport \"components/CSS/style_AuthForm.css\";\nimport \"components/CSS/style_Main.css\";\nimport \"components/CSS/style_Profile.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(AuthService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    AuthService.onAuthStateChanged((User) => {\n      if (User) {\n        setUserObj({\n          displayName: User.displayName,\n          uid: User.uid,\n          updateProfile: (newProfile) => {\n            User.updateProfile(newProfile);\n          },\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUserObj = (newDisplayName) => {\n    setUserObj({\n      displayName: newDisplayName,\n      uid: userObj.uid,\n      updateProfile: (newProfile) => {\n        userObj.updateProfile(newProfile);\n      },\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUserObj={refreshUserObj}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}