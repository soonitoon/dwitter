{"version":3,"sources":["mybase.js","components/AuthWithSocial.js","routes/AuthForm.js","components/Dwitte.js","components/DwitteFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/Loading.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","AuthService","auth","DBService","firestore","storageService","storage","AuthWithSocial","useState","socialLoginError","SetsocialLoginError","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","message","onClick","className","AuthForm","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","required","placeholder","prev","Dwitte","dwitteObj","isOwner","currentUser","isUserLike","editing","setEditing","text","newDwitte","setNewDwitte","isLike","setIsLike","onDeleteClick","window","confirm","doc","id","delete","attachmentURL","refFromURL","toggleEditing","update","creatorName","src","width","height","alt","documentRef","collection","likeUsers","FieldValue","arrayUnion","uid","likeCount","increment","arrayRemove","DwitteFactory","userObj","dwitte","setDwitte","attachment","setAttachment","errorMsg","setErrorMsg","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","add","maxLength","htmlFor","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","Home","dwittes","setDwittes","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","dwitteArray","docs","map","data","dw","includes","Navigation","setDisplayName","to","Profile","refreshUserObj","setDwitteArray","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","where","signOut","push","AppRouter","isLoggedIn","exact","path","Loading","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","User","newProfile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32cf7833.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_PP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const AuthService = firebase.auth();\nexport const DBService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { AuthService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\n\nconst AuthWithSocial = () => {\n  const [socialLoginError, SetsocialLoginError] = useState(\"\");\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    try {\n      await AuthService.signInWithPopup(provider);\n    } catch (err) {\n      SetsocialLoginError(err.message);\n    }\n  };\n  return (\n    <>\n      <button onClick={onSocialClick} name=\"google\" className=\"google-login\">\n        Goolge로 가입하기\n      </button>\n      <br />\n      <button onClick={onSocialClick} name=\"github\" className=\"github-login\">\n        Github으로 가입하기\n      </button>\n      <p className=\"login-error\">{socialLoginError}</p>\n    </>\n  );\n};\n\nexport default AuthWithSocial;\n","import React, { useState } from \"react\";\nimport { AuthService } from \"mybase\";\nimport AuthWithSocial from \"components/AuthWithSocial\";\nimport { BsPeople, BsSearch } from \"react-icons/bs\";\nimport { IoLogoTwitter } from \"react-icons/io5\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await AuthService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await AuthService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <IoLogoTwitter className=\"top-dwitte-icon\" />\n      <h1 className=\"main-title\">\n        지금 전 세계에서 무슨 일이\n        <br /> 일어나고 있는지 알아보세요.\n      </h1>\n      <h5 className=\"sub-title\">오늘 드위터에 가입하세요.</h5>\n      <AuthWithSocial />\n      <div className=\"color-box\">\n        <h5 className=\"color-box-text\">\n          <BsSearch className=\"color-box-icon\" />\n          <div>관심사를 팔로우 하세요.</div>\n        </h5>\n        <h5 className=\"color-box-text\">\n          <BsPeople className=\"color-box-icon\" />\n          <div>\n            사람들이 무엇에 대해 이야기하고\n            <br />\n            있는지 알아보세요.\n          </div>\n        </h5>\n      </div>\n      <h5 className=\"make-account-title\">혹은, 직접 로그인.</h5>\n      <form onSubmit={onSubmit} className=\"LoginForm\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          required\n          value={email}\n          onChange={onChange}\n          placeholder=\"example@email.com\"\n          className=\"email-input\"\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={onChange}\n          placeholder=\"password\"\n          className=\"password-input\"\n        ></input>\n        <input\n          type=\"submit\"\n          className=\"submit-account\"\n          value={newAccount ? \"만들기\" : \"로그인\"}\n        ></input>\n        <button onClick={toggleAccount} className=\"toggle-login\">\n          {newAccount ? \"계정이 있나요?\" : \"계정 만들기\"}\n        </button>\n      </form>\n      <p className=\"login-error\">{error}</p>\n      <footer className=\"AuthFooter\">\n        <p>트위터 클론코딩 -드위터</p>\n      </footer>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { DBService, storageService, firebaseInstance } from \"mybase\";\nimport React, { useState } from \"react\";\nimport { BsFillTrashFill, BsPencilSquare } from \"react-icons/bs\";\nimport { ImCancelCircle, ImCheckmark } from \"react-icons/im\";\nimport { HiThumbUp, HiOutlineThumbUp } from \"react-icons/hi\";\n\nconst Dwitte = ({ dwitteObj, isOwner, currentUser, isUserLike }) => {\n  const [editing, setEditing] = useState(false);\n  const [newDwitte, setNewDwitte] = useState(dwitteObj.text);\n  const [isLike, setIsLike] = useState(isUserLike);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await DBService.doc(`dwitte/${dwitteObj.id}`).delete();\n      if (dwitteObj.attachmentURL) {\n        await storageService.refFromURL(dwitteObj.attachmentURL).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await DBService.doc(`dwitte/${dwitteObj.id}`).update({\n      text: newDwitte,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDwitte(value);\n  };\n\n  const onLikeClick = () => {\n    const documentRef = DBService.collection(\"dwitte\").doc(dwitteObj.id);\n    if (isLike === false) {\n      documentRef.update({\n        likeUsers: firebaseInstance.firestore.FieldValue.arrayUnion(\n          currentUser.uid\n        ),\n        likeCount: firebaseInstance.firestore.FieldValue.increment(1),\n      });\n      setIsLike(true);\n    } else {\n      documentRef.update({\n        likeUsers: firebaseInstance.firestore.FieldValue.arrayRemove(\n          currentUser.uid\n        ),\n        likeCount: firebaseInstance.firestore.FieldValue.increment(-1),\n      });\n      setIsLike(false);\n    }\n  };\n\n  return (\n    <div className=\"dwitte\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your dwitte\"\n              value={newDwitte}\n              required\n              onChange={onChange}\n              className=\"new-dwitte-input\"\n            />\n            <button type=\"submit\" className=\"submit-new-dwitte\">\n              <ImCheckmark />\n            </button>\n          </form>\n          <button onClick={toggleEditing} className=\"cancel-editing\">\n            <ImCancelCircle />\n          </button>\n        </>\n      ) : (\n        <>\n          <h4 className=\"username\">{dwitteObj.creatorName}</h4>\n          <h4 className=\"dwitte-text\">{dwitteObj.text}</h4>\n          {dwitteObj.attachmentURL && (\n            <img\n              src={dwitteObj.attachmentURL}\n              width=\"110px\"\n              height=\"110px\"\n              className=\"dwitte-image\"\n              alt=\"img\"\n            />\n          )}\n          <div className=\"like-container\">\n            <button onClick={onLikeClick} className=\"like-button\">\n              {isLike ? <HiThumbUp /> : <HiOutlineThumbUp />}\n            </button>\n            <p className=\"like-count\">{dwitteObj.likeCount}</p>\n          </div>\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick} className=\"delete-dwitte\">\n                <BsFillTrashFill />\n              </button>\n              <button onClick={toggleEditing} className=\"edit-dwitte\">\n                <BsPencilSquare />\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dwitte;\n","import React, { useState } from \"react\";\nimport { storageService, DBService } from \"mybase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst DwitteFactory = ({ userObj }) => {\n  const [dwitte, setDwitte] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDwitte(value);\n  };\n\n  const onSubmit = async (event) => {\n    if (dwitte !== \"\") {\n      event.preventDefault();\n      let attachmentURL = \"\";\n      if (attachment !== \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentURL = await response.ref.getDownloadURL();\n      }\n      const dwitteObj = {\n        text: dwitte,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        creatorName: userObj.displayName,\n        attachmentURL,\n        likeCount: 0,\n        likeUsers: [],\n      };\n      await DBService.collection(\"dwitte\").add(dwitteObj);\n      setDwitte(\"\");\n      setAttachment(\"\");\n      setErrorMsg(\"\");\n    } else {\n      setErrorMsg(\"no dwitte!\");\n    }\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"dwitte-form\">\n      <input\n        value={dwitte}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's your mind?\"\n        maxLength={120}\n        className=\"dwitte-input\"\n      />\n      <input type=\"submit\" value=\"dwitte\" className=\"submit-dwitte\" />\n      <label htmlFor=\"fileInput\" className=\"file-upload-btn\">\n        <MdAddAPhoto />\n      </label>\n      <p className=\"dwitte-error-msg\">{errorMsg}</p>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"fileInput\"\n        className=\"file-input\"\n      />\n      {attachment && (\n        <>\n          <img\n            src={attachment}\n            width=\"50px\"\n            height=\"50px\"\n            className=\"attach-img\"\n            alt=\"img\"\n          />\n          <button onClick={onClearAttachmentClick} className=\"delete-img\">\n            X\n          </button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default DwitteFactory;\n","import { DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport Dwitte from \"components/Dwitte\";\nimport DwitteFactory from \"components/DwitteFactory\";\n\nconst Home = ({ userObj }) => {\n  const [dwittes, setDwittes] = useState([]);\n\n  const getDwittes = () => {\n    const unsubscribe = DBService.collection(\"dwitte\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const dwitteArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setDwittes(dwitteArray);\n      });\n    return unsubscribe;\n  };\n\n  useEffect(() => {\n    const unsubscribe = getDwittes();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"dwitte-container\">\n      <DwitteFactory userObj={userObj} />\n      {dwittes.map((dw) => (\n        <Dwitte\n          key={dw.id}\n          dwitteObj={dw}\n          isUserLike={dw.likeUsers.includes(userObj.uid)}\n          isOwner={dw.creatorId === userObj.uid}\n          currentUser={userObj}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"components/CSS/style_Main.css\";\nimport { HiOutlineCog } from \"react-icons/hi\";\n\nconst Navigation = ({ userObj }) => {\n  const [displayName, setDisplayName] = useState(\"username\");\n  useEffect(() => {\n    if (userObj.displayName) {\n      setDisplayName(userObj.displayName);\n    }\n  }, [userObj.displayName]);\n  return (\n    <nav>\n      <div className=\"nav-container\">\n        <h5 className=\"home-link\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n        </h5>\n        <h5 className=\"profile-link\">\n          <HiOutlineCog className=\"gear-icon\" />\n          <Link to=\"/profile\" className=\"link profile-name\">\n            {displayName}\n          </Link>\n        </h5>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { AuthService, DBService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dwitte from \"components/Dwitte\";\n\nconst Profile = ({ userObj, refreshUserObj }) => {\n  const [dwitteArray, setDwitteArray] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n\n  const onLogoutClick = () => {\n    AuthService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyDwittes = () => {\n    const unsubscribe = DBService.collection(\"dwitte\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .onSnapshot((snapshot) => {\n        const dwitteArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setDwitteArray(dwitteArray);\n      });\n    return unsubscribe;\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUserObj(newDisplayName);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    const unsubscribe = getMyDwittes();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"edit-profile-form\">\n        <input\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          onChange={onChange}\n          className=\"new-username-input\"\n        />\n        <button type=\"submit\" className=\"submit-username\">\n          수정\n        </button>\n        <button onClick={onLogoutClick} className=\"logout\">\n          logout\n        </button>\n      </form>\n      <div className=\"dwitte-container\">\n        {dwitteArray &&\n          dwitteArray.map((dw) => (\n            <Dwitte\n              key={dw.id}\n              dwitteObj={dw}\n              isUserLike={dw.likeUsers.includes(userObj.uid)}\n              isOwner={dw.creatorId === userObj.uid}\n              currentUser={userObj}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AuthForm from \"routes/AuthForm\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUserObj }) => {\n  return (\n    <Router>\n      {isLoggedIn ? (\n        <>\n          <Navigation userObj={userObj} />\n          <Route exact path=\"/\">\n            <Home userObj={userObj} />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile userObj={userObj} refreshUserObj={refreshUserObj} />\n          </Route>\n        </>\n      ) : (\n        <Route path=\"/\">\n          <AuthForm />\n        </Route>\n      )}\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\n\nfunction Loading() {\n  return (\n    <div className=\"background-color\">\n      <div className=\"loading\"></div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport Loading from \"components/Loading\";\nimport { AuthService } from \"mybase\";\nimport \"components/CSS/reset.css\";\nimport \"components/CSS/style_Loading.css\";\nimport \"components/CSS/style_AuthForm.css\";\nimport \"components/CSS/style_Main.css\";\nimport \"components/CSS/style_Profile.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(AuthService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    AuthService.onAuthStateChanged((User) => {\n      if (User) {\n        setUserObj({\n          displayName: User.displayName,\n          uid: User.uid,\n          updateProfile: (newProfile) => {\n            User.updateProfile(newProfile);\n          },\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUserObj = (newDisplayName) => {\n    setUserObj({\n      displayName: newDisplayName,\n      uid: userObj.uid,\n      updateProfile: (newProfile) => {\n        userObj.updateProfile(newProfile);\n      },\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUserObj={refreshUserObj}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}